ifndef CONTIKI
  $(error CONTIKI not defined! You must specify where CONTIKI resides!)
endif


CONTIKI_TARGET_DIRS = . dev
CONTIKI_TARGET_MAIN = ${addprefix $(OBJECTDIR)/,contiki-main.o}
CONTIKI_TARGET_SOURCEFILES += platform.c clock.c xmem.c buttons.c

# The different options
MAKE_CFS_POSIX = 1
MAKE_CFS_COFFEE = 2

# Use CFS POSIX the default CFS backend.
MAKE_CFS ?= MAKE_CFS_POSIX

ifeq ($(MAKE_CFS),MAKE_CFS_POSIX)
  CONTIKI_TARGET_SOURCEFILES += cfs-posix.c cfs-posix-dir.c
else ifeq ($(MAKE_CFS),MAKE_CFS_COFFEE)
  MODULES += $(CONTIKI_NG_STORAGE_DIR)/cfs
else
  ${error Invalid MAKE_CFS configuration: "$(MAKE_CFS)"}
endif

MODULES += os/lib/event2

# No stack end symbol available, code does not work on 64-bit architectures.
MODULES_SOURCES_EXCLUDES += stack-check.c
# No Serial Peripheral Interface on Native.
MODULES_SOURCES_EXCLUDES += spi.c

ifeq ($(HOST_OS),Windows)
CONTIKI_TARGET_SOURCEFILES += wpcap-drv.c wpcap.c
TARGET_LIBFILES = /lib/w32api/libws2_32.a /lib/w32api/libiphlpapi.a
else
CONTIKI_TARGET_SOURCEFILES += tun6-net.c
endif

ifeq ($(HOST_OS),Linux)
TARGET_LIBFILES += -lrt
endif

CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES)

.SUFFIXES:

# Enable nullmac by default
MAKE_MAC ?= MAKE_MAC_NULLMAC

### Define the CPU directory
CONTIKI_CPU = $(CONTIKI_NG_RELOC_CPU_DIR)/native
include $(CONTIKI_CPU)/Makefile.native
